#########################################
# üõ†Ô∏è SERVICES
#########################################
services: # all containers used for the app
  source_postgres: # DB source
    image: postgres:15.13-alpine3.22 # image from Docker Hub
    ports:
      - "5433:5432" # Map host:container
    networks:
      - elt_network # custom newtwork for all containers to talk to each other
    environment: # Set environment variables
      POSTGRES_DB: ${POSTGRES_DB_SOURCE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./source_db_init/init.sql:/docker-entrypoint-initdb.d/init.sql # Mount local init.sql file to container

  destination_postgres: # DB target
    image: postgres:15.13-alpine3.22
    ports:
      - "5434:5432"
    networks:
      - elt_network
    environment:
      POSTGRES_DB: ${POSTGRES_DB_DEST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  # elt_script: # Run the Extract, Load, Transform script
  #   build:
  #     context: . # Path
  #     dockerfile: src/Dockerfile # Dockerfile to build image
  #   env_file:
  #     - .env
  #   networks: # Connect to same network as other containers
  #     - elt_network
  #   depends_on: # This container starts only after the listed DB are up and running
  #     - source_postgres
  #     - destination_postgres

  # dbt: # This container starts only after elt_script is done
  #   image: ghcr.io/dbt-labs/dbt-postgres:1.8.2@sha256:95d7bb3a14fc9e1b7122e1389e80c8710c87da7ac57b6ccc1ec4eae3b9bbd2ac
  #   command: ["run", "--profiles-dir", "/root", "--project-dir", "/dbt"]
  #   networks:
  #     - elt_network
  #   environment:
  #     DBT_TARGET: dev
  #   volumes:
  #     - ./custom_postgres:/dbt
  #     - ~/.dbt:/root
  #   depends_on: 
  #     elt_script:
  #       condition: service_completed_successfully

  airflow_postgres: # DB for airflow metadata 
    image: postgres:15.13-alpine3.22
    networks:
      - elt_network
    environment:
      POSTGRES_DB: ${POSTGRES_AIRFLOW_DB}
      POSTGRES_USER: ${POSTGRES_AIRFLOW_USER}
      POSTGRES_PASSWORD: ${POSTGRES_AIRFLOW_PASSWORD}

  init-airflow: # init airflow_postgres and create admin user 
    image: apache/airflow:2.7.1
    depends_on: 
      - airflow_postgres
    networks:
      - elt_network
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_AIRFLOW_USER}:${POSTGRES_AIRFLOW_PASSWORD}@airflow_postgres/${POSTGRES_AIRFLOW_DB}
    command: >
      bash -c "airflow db init &&
               airflow users create --username ${POSTGRES_AIRFLOW_USER} --password ${POSTGRES_AIRFLOW_PASSWORD} --firstname John --lastname DOE --role Admin --email admin@example.com"
  
  webserver: # airflow web ui
    build:
      context: .
      dockerfile: Dockerfile
    user: root
    depends_on:  
      - airflow_postgres
      - init-airflow
    networks:
      - elt_network
    extra_hosts: # Allows docker containers to access host machine
      - "host.docker.internal:host-gateway"
    volumes:
      - ./airflow/dags:/opt/airflow/dags # airflow dags
      - ./src:/opt/airflow/src # source code 
      - ./custom_postgres:/opt/dbt # dbt project
      - ~/.dbt:/root/.dbt # dbt config
      - /var/run/docker.sock:/var/run/docker.sock # docker socket
    environment:
      LOAD_EX: n
      EXECUTOR: local
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_AIRFLOW_USER}:${POSTGRES_AIRFLOW_PASSWORD}@airflow_postgres/${POSTGRES_AIRFLOW_DB}
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY}
      AIRFLOW__WEBSERVER__DEFAULT_USER_USERNAME: ${AIRFLOW__WEBSERVER__DEFAULT_USER_USERNAME}
      AIRFLOW__WEBSERVER__DEFAULT_USER_PASSWORD: ${AIRFLOW__WEBSERVER__DEFAULT_USER_PASSWORD}
      AIRFLOW_WWW_USER_USERNAME: ${AIRFLOW_WWW_USER_USERNAME}
      AIRFLOW_WWW_USER_PASSWORD: ${AIRFLOW_WWW_USER_PASSWORD}
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY}
    ports:
      - "8080:8080"
    command: webserver
  
  scheduler: # airflow scheduler process to trigger tasks
    build:
      context: .
      dockerfile: Dockerfile
    user: root
    depends_on: 
      - airflow_postgres
      - init-airflow
    networks:
      - elt_network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./src:/opt/airflow/src
      - ./custom_postgres:/opt/dbt
      - ~/.dbt:/root/.dbt
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      LOAD_EX: n
      EXECUTOR: local
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_AIRFLOW_USER}:${POSTGRES_AIRFLOW_PASSWORD}@airflow_postgres/${POSTGRES_AIRFLOW_DB}
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY}
      AIRFLOW__WEBSERVER__DEFAULT_USER_USERNAME : ${AIRFLOW__WEBSERVER__DEFAULT_USER_USERNAME}
      AIRFLOW__WEBSERVER__DEFAULT_USER_PASSWORD: ${AIRFLOW__WEBSERVER__DEFAULT_USER_PASSWORD}
      AIRFLOW_WWW_USER_USERNAME: ${AIRFLOW_WWW_USER_USERNAME}
      AIRFLOW_WWW_USER_PASSWORD: ${AIRFLOW_WWW_USER_PASSWORD}
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY}
    command: scheduler


#########################################
# üõ†Ô∏è NETWORKS
#########################################
networks: # Define a custom network to use for all Services
  elt_network:
    driver: bridge # Default driver from docker

